{
  "hash": "82320fc738bba0665782022d925e3884",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Supply Chain Data Analytics\nsubtitle: Analyzing and Forcasting Supermarket Sales\nauthors:\n  - name: Stan Brouwer\n    orchid: 0009-0006-3447-0096\n    affiliation: Vrije Universiteit\n    corresponding: true\n  - name: Liz Chan\n    affiliation: Master TSCM\n  - name: Maaike Lamberst\n    affiliation: Supply Chain Data analysis\n  - name: Niek Schroor\n    affiliation: Group 10\n\ndate: last-modified\nbibliography: references.bib\ncitation:\n  container-title: Earth and Space Science\nnumber-sections: true\n---\n\n\n\n\n<h2>Introduction</h2>\n\nWe analyze, forecast and interpret the [Superstore sales](https://public.tableau.com/app/sample-data/sample_-_superstore.xls) provided by [Tableau](https://public.tableau.com/app/learn/sample-data) using different statistical and machine learning methods.\n\nWe describe our work in the PDF version. However, we would like to recommend reading our quarto manuscript *here* as it contains the **relevant** R code in the Article Notebook.\n\n## Data Pre-processing\n\nThe superstore data set we selected is of high quality. Thus we do the required data pre-processing, but included the hypothetical steps we would take were our data of lower quality to communicate our understanding of the data pre-processing process.\n\nWe took the following pre-processing steps:\n\n\n\n\n::: {.cell .hidden}\n\n```{.r .cell-code .hidden}\n# Clear workspace\nrm(list = ls())\n# Function to load (and install if necessary) dependencies\ninstall_and_load <- function(packages) {\n  install.packages(setdiff(packages, rownames(installed.packages())), dependencies = TRUE)\n  invisible(lapply(packages, require, character.only = TRUE))\n}\ninstall_and_load(c(\"tidyverse\", \"readxl\", \"ggplot2\", \"lubridate\", \"stats\", \"Amelia\",\"forecast\", \"tseries\", \"plotly\", \"stringr\", \"knitr\"))\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: tidyverse\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\nLoading required package: readxl\n\nLoading required package: Amelia\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'Amelia' was built under R version 4.3.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: Rcpp\n## \n## Amelia II: Multiple Imputation\n## (Version 1.8.3, built: 2024-11-07)\n## Copyright (C) 2005-2024 James Honaker, Gary King and Matthew Blackwell\n## Refer to http://gking.harvard.edu/amelia/ for more information\n## \nLoading required package: forecast\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'forecast' was built under R version 4.3.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRegistered S3 method overwritten by 'quantmod':\n  method            from\n  as.zoo.data.frame zoo \nLoading required package: tseries\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'tseries' was built under R version 4.3.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: plotly\n\nAttaching package: 'plotly'\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\nThe following object is masked from 'package:stats':\n\n    filter\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\nLoading required package: knitr\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'knitr' was built under R version 4.3.3\n```\n\n\n:::\n:::\n\n\n\n\n-   Improved column names by removing whitespaces\n-   Removed the <code>Row_ID</code> column as it can be inferred by it's index\n-   Removed all columns with a single unique value, as storing these would be [redundant](https://few.vu.nl/~molenaar/courses/StatR/chapters/B-06-raw_data.html)\n-   Ensured machine-readable date formats in yyyy-mm-dd as these usually differ per locale.\n-   Ensured proper decimal separators\n-   calculated the number of missing values (both NA and empty string \"\") per column.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Load the data\nsuppressWarnings({data <- read_excel(\"data/sample_-_superstore.xls\")}) # The Postal code column is stored as 'text' but coerced to numeric, causing warnings which we suppress\n\n# Improve column names (replace \" \"with \"_\")\ncolnames(data) <- str_replace_all(colnames(data), \" \", \"_\")\n\n# Remove the 'Row_ID' column as it can be inferred by it's index\ndata <- subset(data, select = -`Row_ID`)\n\n# Remove all columns that have only one unique value, as storing these would be redundant\ndata <- data[, sapply(data, function(col) length(unique(col)) > 1)]\n\n# Ensure a machine-readable date format as these are usually horrible in excel files\ndata$Order_Date <- as.Date(data$Order_Date, format = \"%Y-%m-%d\")\ndata$Ship_Date <- as.Date(data$Ship_Date, format = \"%Y-%m-%d\")\n\n# The readxl package by default uses the correct decimal separator (as opposed to base R)\n\n# Calculate the number of missing values per column.\n# The sample dates are likely in Unix time, and when these are converted to R date objects they are stored as Date objects (which are represented by 'double' datatypes). Comparing these dates to characters (empty strings) results in NA values. Thus we only check date values for NA. As Date objects are stored as doubles within R (amount of days since 1970-01-01), we can't check numeric columns for \" \" either. We thus only check character columns for \" \".\nmissing_values <- sapply(data, function(col) {\n  if (inherits(col, \"Date\")) {\n    sum(is.na(col))\n  } else if (is.character(col)) {\n    sum(is.na(col) | col == \"\")\n  } else {\n    sum(is.na(col))\n  }\n})\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nif (sum(missing_values) == 0) {\n  print(\"None of the columns contains missing values\")\n  } else {\n  print(\"Some columns contain missing values\")\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"None of the columns contains missing values\"\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n# Optionally, print the missing values as a nice table using knitr\n# Convert the result into a data frame (table)\nmissing_values_table <- data.frame(\n  Column = names(missing_values),\n  Missing_or_Empty = missing_values\n)\n\n# Note that there are no missing values, thus we do not print them\n# kable(missing_values_table, caption = \"Missing or Empty Values in Columns\", format = \"pipe\")\nrm(missing_value, missing_values_table)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning in rm(missing_value, missing_values_table): object 'missing_value' not\nfound\n```\n\n\n:::\n:::\n\n\n\n\nAfter these steps (and transposing the table for better document formatting), the data looks as follows:\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nkable(t(head(data, 3)), caption = \"First 5 Rows of the Data (Transposed)\", format = \"markdown\")\n```\n\n::: {.cell-output-display}\n\n\nTable: First 5 Rows of the Data (Transposed)\n\n|              |                                  |                                                            |                                                          |\n|:-------------|:---------------------------------|:-----------------------------------------------------------|:---------------------------------------------------------|\n|Order_ID      |CA-2016-152156                    |CA-2016-152156                                              |CA-2016-138688                                            |\n|Order_Date    |2016-11-08                        |2016-11-08                                                  |2016-06-12                                                |\n|Ship_Date     |2016-11-11                        |2016-11-11                                                  |2016-06-16                                                |\n|Ship_Mode     |Second Class                      |Second Class                                                |Second Class                                              |\n|Customer_ID   |CG-12520                          |CG-12520                                                    |DV-13045                                                  |\n|Customer_Name |Claire Gute                       |Claire Gute                                                 |Darrin Van Huff                                           |\n|Segment       |Consumer                          |Consumer                                                    |Corporate                                                 |\n|City          |Henderson                         |Henderson                                                   |Los Angeles                                               |\n|State         |Kentucky                          |Kentucky                                                    |California                                                |\n|Postal_Code   |42420                             |42420                                                       |90036                                                     |\n|Region        |South                             |South                                                       |West                                                      |\n|Product_ID    |FUR-BO-10001798                   |FUR-CH-10000454                                             |OFF-LA-10000240                                           |\n|Category      |Furniture                         |Furniture                                                   |Office Supplies                                           |\n|Sub-Category  |Bookcases                         |Chairs                                                      |Labels                                                    |\n|Product_Name  |Bush Somerset Collection Bookcase |Hon Deluxe Fabric Upholstered Stacking Chairs, Rounded Back |Self-Adhesive Address Labels for Typewriters by Universal |\n|Sales         |261.96                            |731.94                                                      |14.62                                                     |\n|Quantity      |2                                 |3                                                           |2                                                         |\n|Discount      |0                                 |0                                                           |0                                                         |\n|Profit        |41.9136                           |219.5820                                                    |6.8714                                                    |\n\n\n:::\n:::\n\n\n\n\n\n\nThere is some more processing to do, such as removing outliers. However, by doing so we impose our own assumptions on the data (possibly the outliers are actual sales?). We will visualize and qualitatively evaluate the data first, and then decide what other processing steps to take. \n\n\n\n\n\n## Section\n\nThis is a simple placeholder for the manuscript's main document [@knuth84].\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n1 + 1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n## Introduction\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\neruptions <- c(1492, 1585, 1646, 1677, 1712, 1949, 1971, 2021)\nn_eruptions <- length(eruptions)\n```\n:::\n\n::: {#cell-fig-timeline .cell}\n\n```{.r .cell-code .hidden}\npar(mar = c(3, 1, 1, 1) + 0.1)\nplot(eruptions, rep(0, n_eruptions), \n  pch = \"|\", axes = FALSE)\naxis(1)\nbox()\n```\n\n::: {.cell-output-display}\n![Timeline of recent earthquakes on La Palma](index_files/figure-jats/fig-timeline-1.png){#fig-timeline fig-alt='An event plot of the years of the last 8 eruptions on La Palma.'}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\navg_years_between_eruptions <- mean(diff(eruptions[-n_eruptions]))\navg_years_between_eruptions\n```\n\n::: {.cell-output .cell-output-stdout .hidden}\n\n```\n[1] 79.83333\n```\n\n\n:::\n:::\n\n\n\n\nBased on data up to and including 1971, eruptions on La Palma happen every 79.8 years on average.\n\nStudies of the magma systems feeding the volcano, such as @marrero2019, have proposed that there are two main magma reservoirs feeding the Cumbre Vieja volcano; one in the mantle (30-40km depth) which charges and in turn feeds a shallower crustal reservoir (10-20km depth).\n\nEight eruptions have been recorded since the late 1400s (@fig-timeline).\n\nData and methods are discussed in @sec-data-methods.\n\nLet $x$ denote the number of eruptions in a year. Then, $x$ can be modeled by a Poisson distribution\n\n$$\np(x) = \\frac{e^{-\\lambda} \\lambda^{x}}{x !}\n$$ {#eq-poisson}\n\nwhere $\\lambda$ is the rate of eruptions per year. Using @eq-poisson, the probability of an eruption in the next $t$ years can be calculated.\n\n| Name                 | Year   |\n| -------------------- | ------ |\n| Current              | 2021   |\n| Teneguía             | 1971   |\n| Nambroque            | 1949   |\n| El Charco            | 1712   |\n| Volcán San Antonio   | 1677   |\n| Volcán San Martin    | 1646   |\n| Tajuya near El Paso  | 1585   |\n| Montaña Quemada      | 1492   |\n\n: Recent historic eruptions on La Palma {#tbl-history}\n\n@tbl-history summarises the eruptions recorded since the colonization of the islands by Europeans in the late 1400s.\n\n![Map of La Palma](images/la-palma-map.png){#fig-map}\n\nLa Palma is one of the west most islands in the Volcanic Archipelago of the Canary Islands (@fig-map). \n\n## Data & Methods {#sec-data-methods}\n\n## Conclusion\n\n## References {.unnumbered}\n\n:::{#refs}\n\n:::",
    "supporting": [
      "index_files/figure-jats"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}